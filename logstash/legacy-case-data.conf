input {
    jdbc {
        jdbc_connection_string => "DB_URL"
        jdbc_user => "DB_USER"
        jdbc_password => "DB_PASSWORD"
        jdbc_validate_connection => true
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        jdbc_default_timezone => "UTC"
        statement => "SELECT 'CAVEAT' as legacy_case_type, id, caveat_number as record_id, probate_number, deceased_forenames,deceased_surname, alias_names, date_of_death1 as date_of_death from caveats_flat"
        clean_run => false

        # every second
        # => "* * * * * *"
        # every 2 seconds
        # schedule => "/2 * * * * *"
    }
}
input {
    jdbc {
        jdbc_connection_string => "DB_URL"
        jdbc_user => "DB_USER"
        jdbc_password => "DB_PASSWORD"
        jdbc_validate_connection => true
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        jdbc_default_timezone => "UTC"
        statement => "SELECT 'STANDING SEARCH' as legacy_case_type, id, ss_number as record_id, probate_number, deceased_forenames,deceased_surname, alias_names, date_of_death1 as date_of_death from standing_searches_flat"
        clean_run => false
    }
}
input {
    jdbc {
        jdbc_connection_string => "DB_URL"
        jdbc_user => "DB_USER"
        jdbc_password => "DB_PASSWORD"
        jdbc_validate_connection => true
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        jdbc_default_timezone => "UTC"
        statement => "select 'WILL' as legacy_case_type, id, rk_number as record_id, probate_number, deceased_forenames,deceased_surname, alias_names, date_of_death1 as date_of_death from wills_flat"
        clean_run => false
    }
}
input {
    jdbc {
        jdbc_connection_string => "DB_URL"
        jdbc_user => "DB_USER"
        jdbc_password => "DB_PASSWORD"
        jdbc_validate_connection => true
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        jdbc_default_timezone => "UTC"
        statement => "select 'LEGACY APPLICATION' as legacy_case_type, id, probate_number as record_id, probate_number, deceased_forenames,deceased_surname, alias_names, date_of_death1 as date_of_death from grant_applications_flat"
        clean_run => false
    }
}
input {
    jdbc {
        jdbc_connection_string => "DB_URL"
        jdbc_user => "DB_USER"
        jdbc_password => "DB_PASSWORD"
        jdbc_validate_connection => true
        jdbc_driver_library => "/usr/share/logstash/postgresql-42.2.2.jar"
        jdbc_driver_class => "org.postgresql.Driver"
        jdbc_paging_enabled => "true"
        jdbc_page_size => "1000"
        jdbc_default_timezone => "UTC"
        statement => "select 'LEGACY GRANT' as legacy_case_type, id, probate_number as record_id, probate_number, deceased_forenames,deceased_surname, alias_names, date_of_death1 as date_of_death from grant_applications_derived_flat"
        clean_run => false
    }
}
filter{
    json{
        source => "json_data"
        target => "data"
        remove_field => ["json_data"]
    }
    json{
        source => "json_data_classification"
        target => "data_classification"
        remove_field => ["json_data_classification"]
    }
    json_encode {
        source => "src"
        add_field => {
            "probate_number_classification" => "PUBLIC"
            "deceased_forenames_classification" => "PUBLIC"
            "deceased_surname_classification" => "PUBLIC"
            "date_of_death_classification" => "PUBLIC"
            "alias_names_classification" => "PUBLIC"
            "record_id_classification" => "PUBLIC"
            "legacy_case_type_classification" => "PUBLIC"
            "security_classification" => "PUBLIC"
            "state" => "ReadOnly"
            "case_type_id" => "Legacy"
            "jurisdiction" => "PROBATE"
        }
        remove_field => ["src"]
    }
    mutate {
        rename => { "probate_number" => "[data][probate_number]" }
        rename => { "deceased_forenames" => "[data][deceasedForenames]" }
        rename => { "deceased_surname" => "[data][deceasedSurname]" }
        rename => { "date_of_death" => "[data][deceasedDateOfDeath]" }
        rename => { "alias_names" => "[data][alias_names]" }
        rename => { "record_id" => "[data][record_id]" }
        rename => { "legacy_case_type" => "[data][legacy_case_type]" }

        rename => { "probate_number_classification" => "[data_classification][probate_number]"}
        rename => { "deceased_forenames_classification" => "[data_classification][deceasedForenames]"}
        rename => { "deceased_surname_classification" => "[data_classification][deceasedSurname]"}
        rename => { "date_of_death_classification" => "[data_classification][deceasedDateOfDeath]"}
        rename => { "alias_names_classification" => "[data_classification][alias_names]"}
        rename => { "record_id_classification" => "[data_classification][record_id]"}
        rename => { "legacy_case_type_classification" => "[data_classification][legacy_case_type]" }
    }
    # mutate { remove_field => [ "@timestamp", "@version" ] }
    mutate {
        add_field => { "index_id" => "%{case_type_id}_cases" }
    }
    mutate {
        lowercase => [ "index_id" ]
    }
}
output {
    elasticsearch {
        hosts => ["ES_DATA_NODES_URL"]
        sniffing => false
        index => "%{[index_id]}"
        document_type => "_doc"
        document_id => "%{id}"
    }
}
