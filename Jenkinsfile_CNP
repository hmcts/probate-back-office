#!groovy

@Library("Infrastructure")

String product = "probate"
String component = "back-office"

List<LinkedHashMap<String, Object>> secrets = [
 
    secret('serviceAuthProviderBaseUrl', 'SERVICE_AUTH_PROVIDER_BASE_URL'),
    secret('userAuthProviderOauth2Url', 'USER_AUTH_PROVIDER_OAUTH2_URL'),
    secret('evidenceManagementUrl', 'EVIDENCE_MANAGEMENT_URL'),
    secret('idamUserId', 'IDAM_USER_ID'),
    secret('probateIdamSecret', 'IDAM_SECRET'),
    secret('s2sAuthTotpSecret', 'S2S_AUTH_TOTP_SECRET'),
    secret('probate-bo-govNotifyApiKey', 'PROBATE_BO_NOTIFY_KEY'),
    secret('pdf-service-grantSignatureBase64-first', 'BO_GRANT_SIG_FIRST'),
    secret('pdf-service-grantSignatureBase64-last','BO_GRANT_SIG_LAST'),
    secret('probateCcdDataStoreApi', 'CCD_DATA_STORE_API_URL'),
    secret('ccd-gateway-host','CCD_GATEWAY_HOST'),
    secret('idamRedirectUrl', 'IDAM_REDIRECT_URL'),
    secret('probatemandb-POSTGRES-USER', 'PROBATE_POSTGRESQL_USER_VAL'),
    secret('probatemandb-POSTGRES-PASS', 'PROBATE_POSTGRESQL_PASSWORD_VAL'),
    secret('probatemandb-POSTGRES-HOST', 'PROBATE_POSTGRESQL_HOSTNAME_VAL'),
    secret('probatemandb-POSTGRES-PORT', 'PROBATE_POSTGRESQL_PORT_VAL'),
    secret('probatemandb-POSTGRES-DATABASE', 'PROBATE_POSTGRESQL_DATABASE_VAL'),
    secret('cwUserId', 'CW_USER_ID'),
    secret('cwUserEmail', 'CW_USER_EMAIL'),
    secret('cwUserPass', 'CW_USER_PASSWORD')
]



static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withPipeline("java", product, component) {
  env.APPINSIGHTS_INSTRUMENTATIONKEY=false
  setVaultName('probate')
  enableDockerBuild()
  enableDeployToAKS()
  loadVaultSecrets(secrets)

  enableSlackNotifications('#probate-jenkins')
  before('buildinfra:prod') {
    error 'Deliberately breaking pipeline to prevent prod deployment'
  }

    after('test') {
    try {
      //sh './gradlew pitest'
    } finally {
      //steps.archiveArtifacts "build/reports/pitest/**/*.*"
    }

    junit 'build/test-results/test/**/*.xml'
    archiveArtifacts 'build/reports/tests/test/index.html'
    publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "build/reports/tests/test",
            reportFiles          : "index.html",
            reportName           : "back-office Test Report"
    ]

    publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "build/reports/jacoco",
            reportFiles          : "index.html",
            reportName           : "back-office Code Coverage Report"
    ]

    publishHTML target: [
            allowMissing         : true,
            alwaysLinkToLastBuild: true,
            keepAll              : true,
            reportDir            : "build/reports/findbugs",
            reportFiles          : "main.html",
            reportName           : "back-office find Bugs Report"
    ]
  }

  after('functionalTest:aat') {
    publishHTML target: [
            reportDir            : "target/site/serenity/",
            reportFiles          : "index.html",
            reportName           : "AAT Functional Tests",
            alwaysLinkToLastBuild: true
    ]
  }

  after('functionalTest:preview') {
    publishHTML target: [
            reportDir            : "target/site/serenity/",
            reportFiles          : "index.html",
            reportName           : "Preview Functional Tests",
            alwaysLinkToLastBuild: true
    ]
  }
}


