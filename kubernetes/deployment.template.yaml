---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
    spec:
      containers:
        - image: ${IMAGE_NAME}
          name: ${SERVICE_NAME}
          env:
            - name: REFORM_TEAM
              value: 'probate'
            - name: REFORM_SERVICE_NAME
              value: 'back-office'
            - name: LOG_LEVEL
              value: 'DEBUG'
            - name: APPINSIGHTS_INSTRUMENTATIONKEY
              value: 'test'
            - name: AUTH_PROVIDER_SERVICE_CLIENT_KEY
              value: ${S2S_AUTH_TOTP_SECRET}
            - name: NOTIFICATIONS_GOVNOTIFYAPIKEY
              value: ${PROBATE_BO_NOTIFY_KEY}
            - name: PDF_SERVICE_GRANTSIGNATUREBASE64
              value: ${BO_GRANT_SIG_FIRST}${BO_GRANT_SIG_LAST}
          envFrom:
            - configMapRef:
                name: ${SERVICE_NAME}-config
          resources:
            requests:
              memory: '1024Mi'
              cpu: '200m'
            limits:
              memory: '2048Mi'
              cpu: '2500m'
          ports:
            - containerPort: 4104
              name: http
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${SERVICE_NAME}
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 4104
  selector:
    app: ${SERVICE_NAME}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: ${SERVICE_FQDN}
    http:
      paths:
      - path: /
        backend:
          serviceName: ${SERVICE_NAME}
          servicePort: 80

