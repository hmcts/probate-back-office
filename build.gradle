buildscript {
  ext {
    springBootVersion = '2.1.3.RELEASE'
  }
  repositories {
    jcenter()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath group: 'org.sonarsource.scanner.gradle', name: 'sonarqube-gradle-plugin', version: '2.6.2'
    classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.83")
    classpath("net.serenity-bdd:serenity-single-page-report:2.1.4")
  }
}

plugins {
  id 'application'
  id 'checkstyle'
  id 'io.spring.dependency-management' version '1.0.6.RELEASE'
  id 'org.springframework.boot' version '2.1.3.RELEASE'
  id 'org.owasp.dependencycheck' version '5.0.0'
  id 'com.github.ben-manes.versions' version '0.15.0'
  id 'com.gorylenko.gradle-git-properties' version '1.4.21'
  id 'info.solidsoft.pitest' version '1.3.0'
}

apply plugin: 'project-report'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: "com.gorylenko.gradle-git-properties"

group = 'uk.gov.hmcts.probate'
version = "4.0.0"
mainClassName = 'uk.gov.hmcts.probate.BusinessRulesValidationApplication'

sourceCompatibility = 1.8
targetCompatibility = 1.8

checkstyle.toolVersion = '8.18'
checkstyle.configFile = new File(rootDir, "checkstyle.xml")
mainClassName = 'uk.gov.hmcts.probate.BusinessRulesValidationApplication'

ext['selenium.version']='3.8.1'

// check.dependsOn dependencyCheckAnalyze
// make build fail on Checkstyle issues (https://github.com/gradle/gradle/issues/881)
tasks.withType(Checkstyle).each { checkstyleTask ->
  checkstyleTask.doLast {
    reports.all { report ->
      def outputFile = report.destination
      if (outputFile.exists() && outputFile.text.contains("<error ")) {
        //throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
      }
    }
  }
}

jacoco {
  toolVersion = '0.8.0'
}

jacocoTestReport {
  group = "Reporting"
  reports {
    xml.enabled false
    html.destination file("${buildDir}/reports/jacoco")
  }
}

sonarqube {
  properties {
    property "sonar.projectName", "PROBATE :: BACK-OFFICE"
    property "sonar.projectKey", "Sols-CCD-Service-API"
    property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    property "sonar.host.url", "https://sonar.reform.hmcts.net/"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    property "sonar.cpd.exclusions", "**/test/**," + "**/CallbackResponseTransformer.java"
  }
}

test.finalizedBy jacocoTestReport

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
  suppressionFile = 'dependency-check-suppressions.xml'
}

pitest {
  targetClasses = ['uk.gov.hmcts.probate.*']
  threads = 10
  outputFormats = ['XML', 'HTML']
  timestampedReports = false
  mutationThreshold = 50
  timeoutConstInMillis = 30000
}

sonarqube {
  properties {
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
  }
}

sourceSets {
  testSmoke {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
  testFunctional {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }
  testCaseCreator {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/caseCreator/java')
    }
    resources.srcDir file('src/caseCreator/resources')
  }
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.testSmoke.output.classesDirs
  classpath = sourceSets.testSmoke.runtimeClasspath
}

task functional(type: Test) {
  description = "Runs functional Tests"
  testClassesDirs = sourceSets.testFunctional.output.classesDirs
  classpath = sourceSets.testFunctional.runtimeClasspath
  finalizedBy aggregate
}

functional.finalizedBy(aggregate)

serenity {
  reports = ["single-page-html"]
}


task caseCreator(type: Test) {
  description = "Runs functional Case creator Tests"
  testClassesDirs = sourceSets.testCaseCreator.output.classesDirs
  classpath = sourceSets.testCaseCreator.runtimeClasspath
  finalizedBy aggregate
}

gitProperties {
  gitPropertiesDir = new File("${project.rootDir}/src/main/resources/uk/gov/hmcts/probate/sol")
  keys = ['git.commit.id','git.commit.time']
  dateFormat = "yyyy-MM-dd'T'HH:mmZ"
  dateFormatTimeZone = "GMT"
}

def versions = [
        springCloudStarterNetflixHystrix: '2.1.3.RELEASE',
        serenity                        : '2.0.23',
        serenityreporter                : '2.1.4',
        springBootVersion               : '2.1.5.RELEASE',
        hmctsJavaLogging                : '5.1.1',
        authCheckerLib                  : '2.1.4',
        jacksonDatabind                 : '2.9.9.3',
        commonsIO                       : '2.6',
        commonsValidator                : '1.6',
        restAssured                     : '3.0.7',
        lombok                          : '1.16.20',
        springfoxSwagger                : '2.9.2',
        springSecurityVersion           : '5.1.1.RELEASE',
        probateCommonsVersion           : '1.0.6',
        ccdClient                       : '4.6.4',
        mapStruct                       : '1.2.0.Final',
        serviceAuthVersion              : '3.0.0'
]

jacocoTestReport {
  executionData(test)
  reports {
    xml.enabled = true
    csv.enabled = false
    xml.destination = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
  maven { url "https://dl.bintray.com/hmcts/hmcts-maven" }
  maven { url "https://repo.maven.apache.org/maven2" }
}


processResources {
  from ('src/lib/AI-Agent.xml') {
    into 'lib'
  }
}

dependencies {
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBootVersion
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web-services', version: versions.springBootVersion
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBootVersion
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.springBootVersion
  implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: versions.springBootVersion
  implementation group: 'org.springframework.retry', name: 'spring-retry', version: '1.2.4.RELEASE'
  implementation group: 'uk.gov.hmcts.reform.probate', name: 'probate-commons', version: versions.probateCommonsVersion

  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: versions.springCloudStarterNetflixHystrix
  implementation ('io.github.openfeign.form:feign-form-spring:3.8.0') {
    force = true
  }

  implementation group: 'org.springframework.hateoas', name: 'spring-hateoas', version: '0.23.0.RELEASE'
  compileOnly("org.projectlombok:lombok:${versions.lombok}")
  testCompileOnly("org.projectlombok:lombok:${versions.lombok}")
  annotationProcessor("org.projectlombok:lombok:${versions.lombok}")
  testAnnotationProcessor("org.projectlombok:lombok:${versions.lombok}")
  implementation group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: versions.hmctsJavaLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'logging-httpcomponents', version: versions.hmctsJavaLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.hmctsJavaLogging
  implementation group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: versions.authCheckerLib
  implementation group: 'uk.gov.service.notify', name: 'notifications-java-client', version: '3.14.1-RELEASE'
  implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.serviceAuthVersion
  implementation group: 'uk.gov.hmcts.reform', name: 'pdf-service-client', version: '6.0.0'
  implementation group: 'uk.gov.hmcts.reform', name: 'send-letter-client', version: '2.5.0'
  implementation group: 'uk.gov.hmcts.reform', name: 'health-spring-boot-starter', version: '0.0.4'
  implementation group: 'uk.gov.hmcts.reform', name: 'properties-volume-spring-boot-starter', version: '0.0.4'

  implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.2'
  implementation group: 'commons-io', name: 'commons-io', version: versions.commonsIO
  implementation group: 'commons-validator', name: 'commons-validator', version: versions.commonsValidator
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jacksonDatabind
  implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: versions.springfoxSwagger
  implementation group: 'io.springfox', name: 'springfox-swagger2', version: versions.springfoxSwagger
  implementation group: 'org.springframework.hateoas', name: 'spring-hateoas', version: '0.23.0.RELEASE'
  implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok

  implementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: '6.6.0'

  implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '10.7.4'

  implementation group: 'org.pitest', name: 'pitest', version: '1.3.2'
  implementation group: 'com.atlassian.commonmark', name: 'commonmark', version: '0.11.0'
  implementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.3.0'
  implementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'

  implementation group: 'uk.gov.hmcts.reform', name: 'core-case-data-store-client', version: versions.ccdClient
  implementation ('org.springframework.boot:spring-boot-starter-data-jpa')
  implementation ('org.postgresql:postgresql:42.2.5') {
    exclude module: 'slf4j-simple'
  }
  implementation group: 'org.mapstruct', name: 'mapstruct-jdk8', version: versions.mapStruct
  compileOnly group: 'org.mapstruct', name: 'mapstruct-processor', version: versions.mapStruct

  testImplementation group: 'uk.gov.hmcts.reform.probate', name: 'probate-commons', version: versions.probateCommonsVersion
  testImplementation("org.springframework.boot:spring-boot-starter-test:$versions.springBootVersion") {
    exclude group: 'com.vaadin.external.google', module:'android-json'
  }
  testImplementation group: 'com.h2database', name: 'h2', version: '1.4.197'
  testImplementation group: 'org.pdfbox', name: 'com.springsource.org.pdfbox', version: '0.7.3'
  testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: versions.springSecurityVersion
  testImplementation group: 'com.mitchellbosecke', name: 'pebble', version: '2.4.0'
  testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.6.2"
  testImplementation "org.junit.jupiter:junit-jupiter-api:5.6.2"

  testSmokeImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
  testSmokeImplementation sourceSets.main.runtimeClasspath
  testSmokeImplementation sourceSets.test.runtimeClasspath

  testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
  testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
  testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
  testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenityreporter
  testFunctionalImplementation group: 'org.awaitility', name: 'awaitility', version: '3.1.6'
  testFunctionalImplementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
  testFunctionalImplementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.serviceAuthVersion
  testFunctionalImplementation group: 'uk.gov.hmcts.reform', name: 'pdf-service-client', version: '6.0.0'
  testFunctionalImplementation sourceSets.main.runtimeClasspath
  testFunctionalImplementation sourceSets.test.runtimeClasspath
  testFunctionalImplementation ('io.github.openfeign.form:feign-form-spring:3.8.0') {
    force = true
  }

  testCaseCreatorImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  testCaseCreatorImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
  testCaseCreatorImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
  testCaseCreatorImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
  testCaseCreatorImplementation group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenityreporter
  testCaseCreatorImplementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
  testCaseCreatorImplementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.serviceAuthVersion
  testCaseCreatorImplementation sourceSets.main.runtimeClasspath
  testCaseCreatorImplementation sourceSets.test.runtimeClasspath
}

tasks.withType(JavaCompile) {
  options.compilerArgs << '-parameters'
}

bootJar {
  archiveFileName = 'back-office.jar'
  manifest {

    attributes 'Implementation-Title': project.name,
            'Implementation-Version': project.version
  }
}

task printVersion {
  doLast {
    print project.version
  }
}

run {
  if (debug == 'true') {
    jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005']
  }
}
