buildscript {
  ext {
    springBootVersion = '2.6.10'
  }
  repositories {
    jcenter()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("net.serenity-bdd:serenity-gradle-plugin:2.5.8")
  }
}

plugins {
  id 'application'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  id 'org.springframework.boot' version '2.6.10'
  id 'uk.gov.hmcts.java' version '0.12.2'
  id 'com.github.ben-manes.versions' version '0.38.0'
  id 'com.gorylenko.gradle-git-properties' version '1.4.21'
  id 'info.solidsoft.pitest' version '1.6.0'
  id 'jacoco'
  id 'au.com.dius.pact' version '4.1.7' // do not change, otherwise serenity report fails
  id 'org.sonarqube' version '3.3'
  id 'com.github.hmcts.rse-cft-lib' version '0.15.133'
}

apply plugin: 'project-report'
apply plugin: 'jacoco'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: "com.gorylenko.gradle-git-properties"

group = 'uk.gov.hmcts.probate'
version = "4.0.0"
mainClassName = 'uk.gov.hmcts.probate.BusinessRulesValidationApplication'

sourceCompatibility = 11
targetCompatibility = 11

mainClassName = 'uk.gov.hmcts.probate.BusinessRulesValidationApplication'

jacoco {
  toolVersion = '0.8.2'
}

sonarqube {
  properties {
    property "sonar.projectName", "PROBATE :: BACK-OFFICE"
    property "sonar.projectKey", "Sols-CCD-Service-API"
    property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
    property "sonar.host.url", "https://sonar.reform.hmcts.net/"
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    property "sonar.exclusions", "**/test/**," + "**/CallbackResponseTransformer.java," + "**/ResponseCaseData.java," + "**/CaseData.java," +
            "**/BusinessRulesValidationApplication.java"
  }
}

test.finalizedBy jacocoTestReport

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  suppressionFile = 'dependency-check-suppressions.xml'
}

pitest {
  targetClasses = ['uk.gov.hmcts.probate.*']
  threads = 10
  outputFormats = ['XML', 'HTML']
  timestampedReports = false
  mutationThreshold = 50
  timeoutConstInMillis = 30000
}

sonarqube {
  properties {
    property "sonar.pitest.mode", "reuseReport"
    property "sonar.pitest.reportsDirectory", "build/reports/pitest"
  }
}

sourceSets {
  testSmoke {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/smokeTest/java')
    }
    resources.srcDir file('src/smokeTest/resources')
  }
  testFunctional {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/functionalTest/java')
    }
    resources.srcDir file('src/functionalTest/resources')
  }
  testCaseCreator {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/caseCreator/java')
    }
    resources.srcDir file('src/caseCreator/resources')
  }
  contractTest {
    java {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/contractTest/java')
    }
    resources.srcDir file('src/contractTest/resources')
  }
}

test {
  maxHeapSize = "1024m"
  useJUnitPlatform()
}

processContractTestResources {
  duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

task smoke(type: Test) {
  description = "Runs Smoke Tests"
  testClassesDirs = sourceSets.testSmoke.output.classesDirs
  classpath = sourceSets.testSmoke.runtimeClasspath
}

task functional(type: Test) {
  description = "Runs functional Tests"
  testClassesDirs = sourceSets.testFunctional.output.classesDirs
  classpath = sourceSets.testFunctional.runtimeClasspath
  finalizedBy aggregate
}

functional.finalizedBy(aggregate)


task caseCreator(type: Test) {
  description = "Runs functional Case creator Tests"
  testClassesDirs = sourceSets.testCaseCreator.output.classesDirs
  classpath = sourceSets.testCaseCreator.runtimeClasspath
  finalizedBy aggregate
}

gitProperties {
  gitPropertiesDir = new File("${project.rootDir}/src/main/resources/uk/gov/hmcts/probate/sol")
  keys = ['git.commit.id','git.commit.time']
  dateFormat = "yyyy-MM-dd'T'HH:mmZ"
  dateFormatTimeZone = "GMT"
}

def versions = [
        springCloudStarterNetflixHystrix: '2.2.10.RELEASE',
        serenity                        : '2.6.0',
        serenityreporter                : '2.6.0',
        springBootVersion               : '2.6.10',
        springBootStarterHateoas        : '2.6.3',
        hmctsJavaLogging                : '5.1.7',
        authCheckerLib                  : '2.1.4',
        jacksonDatabind                 : '2.13.2',
        commonsIO                       : '2.8.0',
        commonsValidator                : '1.6',
        restAssured                     : '4.4.0',
        lombok                          : '1.18.16',
        springDocOpenUi                 : '1.6.6',
        springSecurityVersion           : '5.6.1',
        probateCommonsVersion           : '1.4.0',
        ccdClient                       : '4.7.5',
        mapStruct                       : '1.2.0.Final',
        serviceAuthVersion              : '3.0.0',
        pact_version                    : '4.1.34',
        probatePactCommonsVersion       : '1.0.2',
        springCloud                     : '3.1.1',
        elasticSearchVersion            : '7.15.0',
        documentClient                  : '1.7.3'
]

jacocoTestReport {
  executionData(test)
  reports {
    xml.required = true
    csv.required = false
    xml.outputLocation = file("${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml")
  }
}

repositories {
  mavenLocal()
  mavenCentral()
  jcenter()
  maven { url "https://repo.maven.apache.org/maven2" }
  maven { url "https://jitpack.io" }
}


processResources {
  from ('src/lib/AI-Agent.xml') {
    into 'lib'
  }
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.1"
  }
  dependencies {
    //CVE-2021-22112
    dependencySet(group: 'org.springframework.security', version: '5.6.1') {
      entry 'spring-security-config'
      entry 'spring-security-core'
      entry 'spring-security-crypto'
      entry 'spring-security-web'
    }
  }
}

configurations.all {
  resolutionStrategy {
    eachDependency { DependencyResolveDetails details ->
      if (details.requested.group in ['org.hibernate']) {
        details.useVersion '5.6.5.Final'
      }
      if (details.requested.group in ['org.apache.logging.log4j']) {
        details.useVersion '2.18.0'
      }
    }
  }
}

dependencies {
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: versions.springBootVersion
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web-services', version: versions.springBootVersion
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: versions.springBootVersion
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: versions.springBootVersion
  implementation group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: versions.springBootVersion
  implementation group: 'org.springframework.retry', name: 'spring-retry', version: '1.2.4.RELEASE'
  implementation group: 'com.github.hmcts', name: 'probate-commons', version: versions.probateCommonsVersion
  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-bootstrap', version: versions.springCloud
  implementation group: 'com.github.hmcts', name: 'ccd-case-document-am-client', version: versions.documentClient

  implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: versions.springCloudStarterNetflixHystrix
  implementation ('io.github.openfeign.form:feign-form-spring:3.8.0') {
    force = true
  }

  implementation group: 'com.google.guava', name: 'guava', version: '30.1-jre'
  implementation group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas', version: versions.springBootStarterHateoas
  implementation group: 'uk.gov.hmcts.reform', name: 'logging-spring', version: versions.hmctsJavaLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'logging-httpcomponents', version: versions.hmctsJavaLogging
  implementation group: 'uk.gov.hmcts.reform', name: 'logging-appinsights', version: versions.hmctsJavaLogging
  implementation group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: versions.authCheckerLib
  implementation group: 'uk.gov.service.notify', name: 'notifications-java-client', version: '3.17.3-RELEASE'
  implementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.serviceAuthVersion
  implementation group: 'com.github.hmcts', name: 'cmc-pdf-service-client', version: '6.0.0'
  implementation group: 'uk.gov.hmcts.reform', name: 'send-letter-client', version: '2.5.0'
  implementation group: 'com.github.hmcts', name: 'life-events-client', version: '0.0.9'

  implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.jacksonDatabind
  implementation group: 'commons-io', name: 'commons-io', version: versions.commonsIO
  implementation group: 'commons-validator', name: 'commons-validator', version: versions.commonsValidator
  implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.2.1'
  implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: versions.springDocOpenUi
  implementation group: 'org.springdoc', name: 'springdoc-openapi-security', version: versions.springDocOpenUi
  implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
  implementation group:'org.projectlombok', name: 'lombok', version: versions.lombok
  annotationProcessor group:'org.projectlombok', name:'lombok', version: versions.lombok
  implementation group: 'org.projectlombok', name: 'lombok-mapstruct-binding', version: '0.1.0'

  implementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-high-level-client', version: versions.elasticSearchVersion
  implementation group: 'org.elasticsearch.client', name: 'elasticsearch-rest-client', version: versions.elasticSearchVersion
  implementation group: 'org.elasticsearch', name: 'elasticsearch', version: versions.elasticSearchVersion
  implementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: '5.10.0'

  implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: '10.7.4'
  implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
  implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.13'

  implementation group: 'org.pitest', name: 'pitest', version: '1.3.2'
  implementation group: 'com.atlassian.commonmark', name: 'commonmark', version: '0.11.0'
  implementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.3.0'
  implementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'

  implementation group: 'uk.gov.hmcts.reform', name: 'core-case-data-store-client', version: versions.ccdClient
  implementation ('org.springframework.boot:spring-boot-starter-data-jpa')
  implementation ('org.postgresql:postgresql:42.3.3') {
    exclude module: 'slf4j-simple'
  }
  implementation group: 'org.mapstruct', name: 'mapstruct-jdk8', version: versions.mapStruct
  implementation group: 'org.mapstruct', name: 'mapstruct-processor', version: versions.mapStruct
  annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: versions.mapStruct

  testAnnotationProcessor group:'org.projectlombok', name:'lombok', version: versions.lombok
  testImplementation group: 'com.github.hmcts', name: 'probate-commons', version: versions.probateCommonsVersion
  testImplementation("org.springframework.boot:spring-boot-starter-test:$versions.springBootVersion") {
    exclude group: 'com.vaadin.external.google', module:'android-json'
  }
  testImplementation group: 'com.h2database', name: 'h2', version: '1.4.197'
  testImplementation group: 'org.pdfbox', name: 'com.springsource.org.pdfbox', version: '0.7.3'
  testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: versions.springSecurityVersion
  testImplementation group: 'com.mitchellbosecke', name: 'pebble', version: '2.4.0'
  testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas', version: versions.springBootStarterHateoas
  testImplementation group: 'uk.gov.hmcts.reform.auth', name: 'auth-checker-lib', version: versions.authCheckerLib
  testImplementation group: 'com.github.tomakehurst', name: 'wiremock', version: '2.27.1'
  testImplementation 'org.awaitility:awaitility:4.1.0'
  testImplementation 'com.github.hmcts:fortify-client:1.2.2:all'
  testImplementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: versions.jacksonDatabind

  testSmokeImplementation group: 'io.rest-assured', name: 'rest-assured', version: versions.restAssured
  testSmokeImplementation sourceSets.main.runtimeClasspath
  testSmokeImplementation sourceSets.test.runtimeClasspath

  testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
  testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
  testFunctionalImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
  testFunctionalImplementation group: 'org.awaitility', name: 'awaitility', version: '3.1.6'
  testFunctionalImplementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
  testFunctionalImplementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.serviceAuthVersion
  testFunctionalImplementation group: 'com.github.hmcts', name: 'cmc-pdf-service-client', version: '6.0.0'
  testFunctionalImplementation sourceSets.main.runtimeClasspath
  testFunctionalImplementation sourceSets.test.runtimeClasspath
  testFunctionalAnnotationProcessor group:'org.projectlombok', name: 'lombok', version: versions.lombok
  testFunctionalCompileOnly group:'org.projectlombok', name: 'lombok', version: versions.lombok
  testFunctionalImplementation ('io.github.openfeign.form:feign-form-spring:3.8.0') {
    force = true
  }

  testCaseCreatorImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
  testCaseCreatorImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
  testCaseCreatorImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
  testCaseCreatorImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
  testCaseCreatorImplementation group: 'net.serenity-bdd', name: 'serenity-single-page-report', version: versions.serenityreporter
  testCaseCreatorImplementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.0'
  testCaseCreatorImplementation group: 'uk.gov.hmcts.reform', name: 'service-auth-provider-client', version: versions.serviceAuthVersion
  testCaseCreatorImplementation sourceSets.main.runtimeClasspath
  testCaseCreatorImplementation sourceSets.test.runtimeClasspath
  testCaseCreatorAnnotationProcessor group:'org.projectlombok', name: 'lombok', version: versions.lombok
  testCaseCreatorCompileOnly group:'org.projectlombok', name: 'lombok', version: versions.lombok

  contractTestImplementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.2.1'
  contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'java8', version: versions.pact_version
  contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
  contractTestRuntimeOnly group: 'au.com.dius.pact.consumer', name: 'java8',  version: versions.pact_version
  contractTestRuntimeOnly group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
  contractTestRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.1")
  contractTestImplementation('org.junit.jupiter:junit-jupiter-api:5.7.1')
  contractTestRuntimeOnly group: 'org.junit.platform', name: 'junit-platform-commons', version: '1.7.0'
  contractTestImplementation group: 'com.launchdarkly', name: 'launchdarkly-java-server-sdk', version: '5.6.4'

  contractTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
  contractTestRuntimeOnly group: 'org.springframework.boot', name: 'spring-boot-starter-test'

  contractTestImplementation group: 'com.github.hmcts', name: 'probate-pact-commons', version: versions.probatePactCommonsVersion
  contractTestImplementation sourceSets.main.runtimeClasspath
  contractTestImplementation sourceSets.test.runtimeClasspath

  // Provides fast-reload of the probate service upon edit & compile during local development
  cftlibImplementation 'org.springframework.boot:spring-boot-devtools'
}

tasks.withType(JavaCompile) {
  options.compilerArgs << '-parameters'
}

bootJar {
  archiveFileName = 'back-office.jar'
  manifest {

    attributes 'Implementation-Title': project.name,
            'Implementation-Version': project.version
  }
}

task printVersion {
  doLast {
    print project.version
  }
}

run {
  if (debug == 'true') {
    jvmArgs = ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005']
  }
}

project.ext {
  pacticipant = "probate_backOffice"
  pacticipantVersion = getCheckedOutGitCommitHash()
}

task runAndPublishConsumerPactTests(type: Test){
  logger.lifecycle("Runs consumer pact tests")
  systemProperty 'pact.rootDir', "pacts"
  useJUnitPlatform()
  testClassesDirs = sourceSets.contractTest.output.classesDirs
  classpath = sourceSets.contractTest.runtimeClasspath

}

task fortifyScan(type: JavaExec)  {
  main = "uk.gov.hmcts.fortifyclient.FortifyClientMainApp"
  classpath += sourceSets.test.runtimeClasspath
  jvmArgs = ['--add-opens=java.base/java.lang.reflect=ALL-UNNAMED']
}

task highLevelDataSetup(type: JavaExec) {
  onlyIf {
    return false
  }
}

test {
  maxHeapSize = "1024m"
  useJUnitPlatform()
}

runAndPublishConsumerPactTests.finalizedBy pactPublish

static def getCheckedOutGitCommitHash() {
  'git rev-parse --verify --short HEAD'.execute().text.trim()
}

pact {
  broker {
    pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
  }
  publish {
    pactDirectory = 'pacts'
    tags = [System.getenv("PACT_BRANCH_NAME") ?:'Dev']
    version = project.pacticipantVersion
  }
}

// Build the back office excel file.
task buildBackOfficeXlsx(type: Exec) {
  environment 'CCD_DEF_CASE_SERVICE_BASE_URL', 'localhost:4104'

  def input = project.file('ccdImports/configFiles/CCD_Probate_Backoffice')
  commandLine project.file("ccdImports/conversionScripts/convertJsonToXLS.sh")
  args input
  // Register the inputs and outputs so Gradle can skip if up-to-date.
  inputs.dir input
  outputs.file project.file('jsonToXLS/CCD_Probate_Backoffice.xlsx')
}

bootWithCCD {
  dependsOn buildBackOfficeXlsx
  authMode = uk.gov.hmcts.rse.AuthMode.Local
  // Request the cftlib create the probate_man database
  environment 'RSE_LIB_ADDITIONAL_DATABASES', 'probate_man'

  environment 'IDAM_S2S_URL', 'http://localhost:8489'
  environment 'IDAM_SERVICE_HOST', 'http://localhost:5000'
  environment 'PROBATE_POSTGRESQL_PORT', '6432'
  environment 'PROBATE_POSTGRESQL_USER', 'postgres'
  environment 'PROBATE_POSTGRESQL_PASSWORD', 'postgres'
}

bootJar {
  getArchiveFileName().set(provider {
    'back-office.jar'
  })

  manifest {
    attributes('Implementation-Version': project.version.toString())
  }
}
