#!groovy

properties([
        pipelineTriggers([cron('15 06 31 2 1-5')]),
        parameters([
                string(name: 'ENVIRONMENT', defaultValue: 'aat', description: 'Environment to test'),
                string(name: 'XUI_URL_TO_TEST', defaultValue: 'https://manage-case.aat.platform.hmcts.net', description: 'The URL you want to run both solicitor and caseworker tests against'),
                string(name: 'URL_TO_TEST', defaultValue: 'https://probate-back-office-aat.service.core-compute-aat' +
                        '.internal', description: 'The URL you want to run these tests against'),
                string(name: 'SecurityRules',
                        defaultValue: 'https://raw.githubusercontent.com/hmcts/security-test-rules/master/conf/security-rules.conf',
                        description: 'The URL you want to run these tests against'),
        ])
])

@Library("Infrastructure") _

String product = "probate"
String component = "back-office"

def secrets = [
  'probate-aat': [
    secret('cwUserEmail', 'CW_USER_EMAIL'),
    secret('cwUserPass', 'CW_USER_PASSWORD'),
    secret('solicitorUserEmail', 'SOL_USER_EMAIL'),
    secret('solicitorUserPass', 'SOL_USER_PASSWORD'),
    secret('solicitor2UserEmail', 'SOL2_USER_EMAIL'),
    secret('solicitor2UserPass', 'SOL2_USER_PASSWORD')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withNightlyPipeline("nodejs", product, component) {
    env.TEST_E2E_URL = params.XUI_URL_TO_TEST
    env.TEST_URL = params.URL_TO_TEST
    env.Rules = params.SecurityRules
    loadVaultSecrets(secrets)
    enableFullFunctionalTest(120)
    enableSecurityScan()
    enableFortifyScan('probate-aat')
    // enableCrossBrowserTest(['chrome', 'firefox', 'safari', 'microsoft'])
    afterAlways('fullFunctionalTest') {
        env.TEST_E2E_URL = "https://manage-case.demo.platform.hmcts.net"
        sh 'yarn install'
        publishHTML target: [
            allowMissing: true,
            alwaysLinkToLastBuild: true,
            keepAll: true,
            reportDir: 'target/site/serenity/',
            reportFiles: 'index.html',
            reportName: 'UI Functional Test Report'
        ]
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/functional/reports/**/*'
    }

    afterAlways('crossBrowserTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    }

    afterSuccess('fortify-scan') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/Fortify Scan/**/*'
    }

    // enableSlackNotifications('#probate-jenkins')  // can be turned back on once the overnight functionality is working fully
}
